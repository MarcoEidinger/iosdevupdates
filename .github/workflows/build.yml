name: Aggregate and Deploy

on:
  workflow_dispatch:
  schedule:
    # Runs "At minute 0 past every 2nd hour." (see https://crontab.guru)
    - cron: '0 */2 * * *'

jobs:
  build:

    runs-on: macos-13

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Cache/Restore Mint packages
      id: mint-cache
      uses: actions/cache@v2
      with:
          path: ${{ github.workspace }}/mint
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: ${{ runner.os }}-mint-
    - name: Install package manager "Mint" to install and run Swift command line tool packages
      run: |
          brew upgrade mint || brew install mint || true
    - name: Install command line tool (if not yet cached)
      if: steps.mint-cache.outputs.cache-hit != 'true'
      run: mint bootstrap
    - name: Run command line tool
      run: mint run --silent OsmiumAtlas > blogs.json
      env:
        DEVELOPER_DIR: /Applications/Xcode_15.2.app/Contents/Developer
    - name: Copy blogs.json to content folder
      run: cp blogs.json content/
    - uses: actions/upload-artifact@v4
      with:
        name: blogs.json
        path: content/blogs.json
    - name: Cache node modules
      uses: actions/cache@v4
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-cache-node-modules-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - run: npm ci
    - name: Build website
      run: npm run build
    - name: Push website to gh-pages
      run: |
          git config --global user.email "${GITHUB_ACTOR}"
          git config --global user.name "${GITHUB_ACTOR}@users.noreply.github.com"
          git clone "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" out
          cd out
          git checkout gh-pages
          git rm -rf .
          cd ..
          cp -a public/. out/.
          cd out
          git add -A
          git commit -m "Automated deployment to GitHub Pages: ${GITHUB_SHA}" --allow-empty
          git push origin gh-pages
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
